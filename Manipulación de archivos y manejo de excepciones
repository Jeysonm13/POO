class Inventario:
    def __init__(self, archivo_inventario="inventario.txt"):
        self.archivo_inventario = archivo_inventario
        self.productos = {}  # Diccionario para almacenar productos (clave: código, valor: producto)
        self.cargar_desde_archivo()

    def agregar_producto(self, codigo, nombre, precio, cantidad):
        # Lógica para agregar producto y guardar en archivo
        pass

    def actualizar_producto(self, codigo, nombre, precio, cantidad):
        # Lógica para actualizar producto y guardar en archivo
        pass

    def eliminar_producto(self, codigo):
        # Lógica para eliminar producto y guardar en archivo
        pass

def cargar_desde_archivo(self):
    try:
        with open(self.archivo_inventario, "r") as archivo:
            for linea in archivo:
                # Lógica para leer y procesar cada línea del archivo
                pass
    except FileNotFoundError:
        print(f"Archivo '{self.archivo_inventario}' no encontrado. Creando uno nuevo.")
    except Exception as e:
        print(f"Error al cargar inventario desde archivo: {e}")

def guardar_en_archivo(self):
    try:
        with open(self.archivo_inventario, "w") as archivo:
            for producto in self.productos.values():
                # Lógica para escribir cada producto en una línea del archivo
                pass
    except Exception as e:
        print(f"Error al guardar inventario en archivo: {e}")

from inventario import Inventario

def main():
    inventario = Inventario()

    while True:
        # Mostrar menú de opciones al usuario
        # ...

        try:
            opcion = input("Seleccione una opción: ")

            if opcion == "1":  # Agregar producto
                # ... (Lógica para agregar producto)
            elif opcion == "2":  # Actualizar producto
                # ... (Lógica para actualizar producto)
            # ... (Más opciones)
        except ValueError:
            print("Error: Ingrese un valor numérico válido.")
        except Exception as e:
            print(f"Error inesperado: {e}")

if __name__ == "__main__":
    main()

#ejemplo:
def cargar_desde_archivo(self):
    try:
        with open(self.archivo_inventario, "r") as archivo:
            for linea in archivo:
                codigo, nombre, precio, cantidad = linea.strip().split(",")
                self.productos[codigo] = {"nombre": nombre, "precio": float(precio), "cantidad": int(cantidad)}
    except FileNotFoundError:
        print(f"Archivo '{self.archivo_inventario}' no encontrado. Creando uno nuevo.")
    except Exception as e:
        print(f"Error al cargar inventario desde archivo: {e}")

def guardar_en_archivo(self):
    try:
        with open(self.archivo_inventario, "w") as archivo:
            for codigo, producto in self.productos.items():
                archivo.write(f"{codigo},{producto['nombre']},{producto['precio']},{producto['cantidad']}\n")
    except Exception as e:
        print(f"Error al guardar inventario en archivo: {e}")
